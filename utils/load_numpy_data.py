import os
import numpy as np

def load_npy_from_directory(directory):
    print(f"\nüîç –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
    if not os.path.exists(directory):
        raise FileNotFoundError(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞: {directory}")

    # –í—Å–∏—á–∫–∏ —Ñ–∞–π–ª–æ–≤–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞
    files = os.listdir(directory)
    print(f"üìÇ –ù–∞–º–µ—Ä–µ–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ: {files}")

    if len(files) == 0:
        raise ValueError(f"‚ö†Ô∏è –ù—è–º–∞ —Ñ–∞–π–ª–æ–≤–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞: {directory}")

    # –§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ –ø–æ —Ç–∏–ø
    state_files = sorted([f for f in files if "_state" in f])
    policy_files = sorted([f for f in files if "_policies" in f])
    value_files = sorted([f for f in files if "_value" in f])

    print(f"üß† state —Ñ–∞–π–ª–æ–≤–µ: {state_files}")
    print(f"üéØ policy —Ñ–∞–π–ª–æ–≤–µ: {policy_files}")
    print(f"üíé value —Ñ–∞–π–ª–æ–≤–µ: {value_files}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ —Ç—Ä–∏—Ç–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–æ–≤–µ —Å–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏
    if not state_files or not policy_files or not value_files:
        raise ValueError("‚ùó –ù–µ —Å–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ –≤—Å–∏—á–∫–∏ –≤–∏–¥–æ–≤–µ .npy —Ñ–∞–π–ª–æ–≤–µ (state, policy, value). –ü—Ä–æ–≤–µ—Ä–∏ –∏–º–µ–Ω–∞—Ç–∞!")

    # –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ—Ç–µ
    all_states = [np.load(os.path.join(directory, f)) for f in state_files]
    all_policies = [np.load(os.path.join(directory, f)) for f in policy_files]
    all_values = [np.load(os.path.join(directory, f)) for f in value_files]

    # –û–±–µ–¥–∏–Ω—è–≤–∞–Ω–µ
    return (
        np.concatenate(all_states, axis=0),
        np.concatenate(all_policies, axis=0),
        np.concatenate(all_values, axis=0)
    )
