import os
import numpy as np

# –ü—ä—Ç –∫—ä–º —Ç–≤–æ–∏—Ç–µ .npy —Ñ–∞–π–ª–æ–≤–µ
base_dir = r"/home/presi/projects/chess_ai_project/training"

splits = ["train", "validation", "test"]

for split in splits:
    split_path = os.path.join(base_dir, split)
    if not os.path.exists(split_path):
        print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞—Ç–∞ {split} –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.")
        continue

    npy_files = [f for f in os.listdir(split_path) if f.endswith(".npy")]
    print(f"\nüìÅ {split.upper()} ({len(npy_files)} —Ñ–∞–π–ª–∞)")

    if not npy_files:
        continue

    # –ó–∞—Ä–µ–∂–¥–∞–º–µ —Å–∞–º–æ –ø—ä—Ä–≤–∏—è —Ñ–∞–π–ª –∑–∞ –ø—Ä–∏–º–µ—Ä
    path = os.path.join(split_path, npy_files[0])
    data = np.load(path, allow_pickle=True)
    print(f"‚û°Ô∏è –ó–∞—Ä–µ–¥–µ–Ω —Ñ–∞–π–ª: {npy_files[0]}")
    print(f"–¢–∏–ø –¥–∞–Ω–Ω–∏: {type(data)}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∫–≤–æ —Å—ä–¥—ä—Ä–∂–∞
    if isinstance(data, np.ndarray):
        print(f"Shape: {data.shape}")
        print("–ü—Ä–∏–º–µ—Ä–µ–Ω –µ–ª–µ–º–µ–Ω—Ç:")
        print(data[0])

    elif isinstance(data, dict):
        print(f"–ö–ª—é—á–æ–≤–µ: {list(data.keys())}")
        for k, v in data.items():
            print(f"  {k}: shape={np.array(v).shape}")

    elif isinstance(data, list) and isinstance(data[0], dict):
        print(f"–°–ø–∏—Å—ä–∫ –æ—Ç {len(data)} –µ–ª–µ–º–µ–Ω—Ç–∞. –ü—Ä–∏–º–µ—Ä–µ–Ω –∫–ª—é—á–æ–≤ –Ω–∞–±–æ—Ä:")
        print(data[0].keys())

    else:
        print("‚ùì –ù–µ–ø–æ–∑–Ω–∞—Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, —Ç—Ä—è–±–≤–∞ –¥–∞ –≤–∏–¥–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—è –ø—Ä–∏–º–µ—Ä.")
